{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","removeGood","filter","item","removeAllGoods","getCardInfo","firstGood","slice","map","el","charAt","toLowerCase","lastGoodInList","lotOfGoods","join","length","this","displayedGoods","className","type","onClick","isSelectedGood","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,sJACA,8KACA,yDACA,qIACA,4GACA,yMACA,uCACA,oGACA,kFACA,8DAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,wJAFpB,EAKEC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,SAP9C,EAWEE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcK,QACjC,SAACC,GAAD,OAAUA,IAASJ,UAd3B,EAmBEK,eAAiB,kBACf,EAAKJ,SAAS,CAAEH,cAAe,MApBnC,EAuBEQ,YAAc,WACZ,IAAQR,EAAkB,EAAKD,MAAvBC,cACFS,EAAYT,EAAcU,MAAM,EAAG,GACtCC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,OAAO,GAAGC,cAAgBF,EAAGF,MAAM,MAC7CK,EAAiBf,EAAcU,OAAO,GACzCC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,OAAO,GAAGC,cAAgBF,EAAGF,MAAM,MAC7CM,EAAahB,EAAcU,MAAM,GAAI,GACxCC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,OAAO,GAAGC,cAAgBF,EAAGF,MAAM,MAAIO,KAAK,MAE5D,OAAQjB,EAAckB,QACpB,KAAK,EACH,MAAO,+NACT,KAAK,EACH,MAAM,4BAAN,OAAeT,GACjB,KAAK,EACH,MAAM,4BAAN,OAAeA,EAAf,mBAA8BM,GAChC,QACE,MAAM,4BAAN,OAAeC,EAAf,mBAA+BD,KAxCvC,4CA4CE,WAAU,IAAD,OACCf,EAAkBmB,KAAKpB,MAAvBC,cACFoB,EAAiBD,KAAKX,cAE5B,OACE,qBAAKa,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,wGAEE,uBAFF,2EAKA,qBAAKA,UAAU,sBAAf,SACGD,IAEFpB,EAAckB,OAAS,GACtB,wBACEG,UAAU,iCACVC,KAAK,SACLC,QAASJ,KAAKZ,eAHhB,2FAUJ,oBAAIc,UAAU,YAAd,SACGxB,EAAgBc,KAAI,SAACT,GACpB,IAAMsB,EAAiBxB,EAAcyB,SAASvB,GAE9C,OACE,qBAAemB,UAAU,YAAzB,UACGnB,EACAsB,EACC,wBACEH,UAAU,kCACVC,KAAK,SACLC,QAAS,kBAAM,EAAKnB,WAAWF,IAHjC,wFAQA,wBACEmB,UAAU,+BACVC,KAAK,SACLC,QAAS,kBAAM,EAAKtB,QAAQC,IAH9B,wCAXKA,iBA5EzB,GAAyBwB,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.38ec1f82.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Машинку на радио-управлении',\n  'Сто миллионов миллиардов конфет',\n  'Велосипед',\n  'Куклу с домиком и лошадью',\n  'Маме и папе здоровья',\n  'Волшебную палочку, как у Гарри Поттера',\n  'Собаку',\n  'Красные черевички',\n  'Надувную лодку',\n  'Снегуроку 18+',\n];\n\ninterface State {\n  selectedGoods: string[],\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Машинку на радио-управлении'],\n  };\n\n  addGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter(\n        (item) => item !== good,\n      ),\n    }));\n  };\n\n  removeAllGoods = () => (\n    this.setState({ selectedGoods: [] })\n  );\n\n  getCardInfo = () => {\n    const { selectedGoods } = this.state;\n    const firstGood = selectedGoods.slice(0, 1)\n      .map(el => el.charAt(0).toLowerCase() + el.slice(1));\n    const lastGoodInList = selectedGoods.slice(-1)\n      .map(el => el.charAt(0).toLowerCase() + el.slice(1));\n    const lotOfGoods = selectedGoods.slice(0, -1)\n      .map(el => el.charAt(0).toLowerCase() + el.slice(1)).join(', ');\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'Я уже взрослый(ая), но от машинки не откажусь';\n      case 1:\n        return `Хочу ${firstGood}`;\n      case 2:\n        return `Хочу ${firstGood} и ${lastGoodInList}`;\n      default:\n        return `Хочу ${lotOfGoods} и ${lastGoodInList}`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const displayedGoods = this.getCardInfo();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__container\">\n          <div className=\"App__info\">\n            <h1 className=\"App__title\">\n              Заказать подарки\n              <br />\n              у Деда Мороза:\n            </h1>\n            <div className=\"App__displayedGoods\">\n              {displayedGoods}\n            </div>\n            {selectedGoods.length > 0 && (\n              <button\n                className=\"App__button App__button--clear\"\n                type=\"button\"\n                onClick={this.removeAllGoods}\n              >\n                Ничего не хочу\n              </button>\n            )}\n          </div>\n\n          <ul className=\"App__list\">\n            {goodsFromServer.map((good) => {\n              const isSelectedGood = selectedGoods.includes(good);\n\n              return (\n                <li key={good} className=\"App__item\">\n                  {good}\n                  {isSelectedGood ? (\n                    <button\n                      className=\"App__button App__button--remove\"\n                      type=\"button\"\n                      onClick={() => this.removeGood(good)}\n                    >\n                      Больше не хочу\n                    </button>\n                  ) : (\n                    <button\n                      className=\"App__button App__button--add\"\n                      type=\"button\"\n                      onClick={() => this.addGood(good)}\n                    >\n                      Хочу\n                    </button>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}